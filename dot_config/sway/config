# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod1

# set $mod Mod2
# input type:keyboard {
#	xkb_layout us
#	}
# input * xkb_layout caps

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty 

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec -- 

# for_window [class="URxvt" instance="launcher"] floating enable, border pixel 1, sticky enable
# set $menu exec urxvt -geometry 100x18 -name launcher -e env TERMINAL_COMMAND="termite -e" /usr/bin/sway-launcher-desktop

for_window [title="sway-launcher-desktop"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 2
#set $menu $term --exec sway-launcher-desktop
#set $menu $term -e sway-launcher-desktop | xargs swaymsg exec --
#set $menu "termite -c /etc/xdg/termite/config --exec=sway-launcher-desktop | xargs swaymsg exec"
#set $menu /usr/bin/wofi --show run --exec-search --prompt "Run Command" --term $term | xargs swaymsg exec --

set $launcher sway-launcher-desktop | xargs swaymsg exec

# set $menu /usr/bin/yofi | yofi | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_768x1024_Portrait.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
# output HDMI-A-1 resolution 1920x1080 position 1920,0 transform 270
# 1,2... is desktop number when pluging in multiple displays

# output HDMI-A-1 resolution 1280x720 position 1280,0 transform 0 bg /usr/share/file/Synthwave-lightgrid-landscape-2.jpg fill #000000

output HDMI-A-1 mode --custom 1920x1080@50.000Hz pos 1920 0 transform 90 bg /usr/share/file/Synthwave-lightgrid-landscape-2.jpg fill #000000

output "Toshiba America Info Systems Inc Hisense Q5 0x00008800" mode --custom 1280x720 pos 1280 0 transform 0 bg /usr/share/file/Synthwave-lightgrid-landscape-2.jpg fill #000000

#output HDMI-A-1 mode --custom 1280x720@60Hz pos 1280 0 transform 270 bg /usr/share/file/Synthwave-lightgrid-landscape-2.jpg fill #000000

output "Avolites Ltd HUYINIUDA 0x00000001" mode 1024x768@60Hz pos 1024,0 transform 0 bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_768x1024_Portrait.png fill

output HDMI-A-2 mode 1024x768@60Hz pos 1024,0 transform 0 bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_768x1024_Portrait.png fill

### Idle configuration
#
# Example configuration:

#exec swayidle -w \
#	timeout 10 'termite -t screensaver -e wlr-sunclock \
#   --margins "0,0,0,0" \
#   --width 800 \
#   --layer bottom \
#   --anchors tblr \
#   --border-width 0 && swaylock -f -c 000000cc' \
#	timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#	before-sleep 'termite -t screensaver -e wlr-sunclock \
#   --margins "0,0,0,0" \
#   --width 800 \
#   --layer bottom \
#   --anchors tblr \
#   --border-width 0 && swaylock -f -c 000000cc'

for_window [title="screensaver"] floating enable, sticky enable

set $sunclock 'termite \
			-t screensaver \
			-e "wlr-sunclock \
				--margins "0,0,0,0" \
				--width 800 \
				--layer overlay \
				--anchors tblr \
				--border-width 0"'

exec swayidle -w \
timeout 600 $sunclock \
timeout 100 'swaylock -f -c 00000099' \
timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
before-sleep 'swaylock -f -c 00000099' \
unlock 'swaymsg [title="screensaver] kill'

# cmd 'swaymsg -t get_tree' get all open windows' properties

# sunclock show in 5mins with transparent lock, last for 5mins

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# fcitx5 input method framework autostart
exec_always fcitx5 -d --replace


### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
# for glsl capabilities, we need LIBGL_ALWAYS_SOFTWARE set to 1 to start term Alacritty
# https://github.com/alacritty/alacritty/issues/128#issuecomment-875489601
    bindsym $mod+Return exec LIBGL_ALWAYS_SOFTWARE=1 $term -e murex
    bindsym $mod+t exec LIBGL_ALWAYS_SOFTWARE=1 $term -e zsh
#    bindsym $mod+t exec $term --exec=/usr/bin/osh

    #go idle

#bindsym $mod+m exec swayidle timeout 10 'termite \
#			-t screensaver \
#			-e "wlr-sunclock \
#				--margins "0,0,0,0" \
#				--width 800 \
#				--layer bottom\
#				--anchors tblr\
#				--border-width 0"' \
bindsym $mod+m exec swayidle timeout 10 $sunclock \
#timeout 10 'swaylock -f -c 000000cc'


    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    #bindsym $mod+d exec $menu
    bindsym $mod+d exec termite --name launcher -e "sh -c \'$launcher\'"

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# USE base16-sway:include color variables of choosen theme
 include ~/.config/sway/colorscheme

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    status_command while date +'%Y-%m-%d %l:%M %p'; do sleep 1; done


# default statusbar color
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#   }

## USE base16-sway:assign color variables to statusbar
	colors {
	    background $base00
	    separator  $base01
	    statusline $base04
	
	    # State             Border  BG      Text
	    focused_workspace   $base05 $base0D $base00
	    active_workspace    $base05 $base03 $base00
	    inactive_workspace  $base03 $base01 $base05
	    urgent_workspace    $base08 $base08 $base00
	    binding_mode        $base00 $base0A $base00
	}

}

# USE base16-sway:for windows and borders
# Basic color configuration using the Base16 variables for windows and borders.
# Property Name         Border  BG      Text    Indicator Child Border
 client.focused          $base05 $base0D $base00 $base0D $base0D
 client.focused_inactive $base01 $base01 $base05 $base03 $base01
 client.unfocused        $base01 $base00 $base05 $base01 $base01
 client.urgent           $base08 $base08 $base00 $base08 $base08
 client.placeholder      $base00 $base00 $base05 $base00 $base00
 client.background       $base07


include /etc/sway/config.d/*
